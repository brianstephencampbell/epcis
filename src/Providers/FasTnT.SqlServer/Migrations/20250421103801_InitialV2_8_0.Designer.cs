// <auto-generated />
using System;
using FasTnT.Application.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FasTnT.SqlServer.Migrations
{
    [DbContext(typeof(EpcisContext))]
    [Migration("20250421103801_InitialV2_8_0")]
    partial class InitialV2_8_0
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FasTnT.Domain.Model.Events.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("Action")
                        .HasColumnType("smallint");

                    b.Property<string>("BusinessLocation")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BusinessStep")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CertificationInfo")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CorrectiveDeclarationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CorrectiveReason")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Disposition")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EventId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<short>("EventTimeZoneOffset")
                        .HasColumnType("smallint");

                    b.Property<string>("ReadPoint")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("TransformationId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Event", "Epcis");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Masterdata.MasterData", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("RequestId", "Index");

                    b.ToTable("MasterData", "Cbv");

                    b.ToView("CurrentMasterdata", "Cbv");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Masterdata.MasterDataChildren", b =>
                {
                    b.Property<int>("MasterDataRequestId")
                        .HasMaxLength(256)
                        .HasColumnType("int");

                    b.Property<int>("MasterDataIndex")
                        .HasColumnType("int");

                    b.Property<string>("ChildrenId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("MasterDataRequestId", "MasterDataIndex", "ChildrenId");

                    b.ToTable("MasterDataChildren", "Cbv");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Masterdata.MasterdataHierarchy", b =>
                {
                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Root")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("MasterdataHierarchy", "Cbv");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Queries.StoredQuery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("StoredQuery", "Queries");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CaptureId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("DocumentTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecordTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchemaVersion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Request", "Epcis");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.StandardBusinessHeader", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstanceIdentifier")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Standard")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TypeVersion")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("RequestId");

                    b.ToTable("StandardBusinessHeader", "Sbdh");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Subscriptions.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BufferRequestIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("FormatterName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("InitialRecordTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastExecutedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("QueryName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("ReportIfEmpty")
                        .HasColumnType("bit");

                    b.Property<string>("SignatureToken")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Trigger")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Subscription", "Subscriptions");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Subscriptions.SubscriptionCallback", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<short>("CallbackType")
                        .HasColumnType("smallint");

                    b.Property<string>("Reason")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("SubscriptionId");

                    b.HasKey("RequestId");

                    b.ToTable("SubscriptionCallback", "Epcis");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Events.Event", b =>
                {
                    b.HasOne("FasTnT.Domain.Model.Request", "Request")
                        .WithMany("Events")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("FasTnT.Domain.Model.Events.BusinessTransaction", "Transactions", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("int");

                            b1.Property<string>("Type")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Id")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("EventId", "Type", "Id");

                            b1.ToTable("BusinessTransaction", "Epcis");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.OwnsMany("FasTnT.Domain.Model.Events.CorrectiveEventId", "CorrectiveEventIds", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("int");

                            b1.Property<string>("CorrectiveId")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("EventId", "CorrectiveId");

                            b1.ToTable("CorrectiveEventId", "Epcis");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.OwnsMany("FasTnT.Domain.Model.Events.Destination", "Destinations", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("int");

                            b1.Property<string>("Type")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Id")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("EventId", "Type", "Id");

                            b1.ToTable("Destination", "Epcis");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.OwnsMany("FasTnT.Domain.Model.Events.Epc", "Epcs", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("int");

                            b1.Property<short>("Type")
                                .HasColumnType("smallint");

                            b1.Property<string>("Id")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<float?>("Quantity")
                                .HasColumnType("real");

                            b1.Property<string>("UnitOfMeasure")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.HasKey("EventId", "Type", "Id");

                            b1.ToTable("Epc", "Epcis");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.OwnsMany("FasTnT.Domain.Model.Events.Field", "Fields", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("int");

                            b1.Property<int>("Index")
                                .HasColumnType("int");

                            b1.Property<DateTime?>("DateValue")
                                .HasColumnType("datetime2");

                            b1.Property<int?>("EntityIndex")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Namespace")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<double?>("NumericValue")
                                .HasColumnType("float");

                            b1.Property<int?>("ParentIndex")
                                .HasColumnType("int");

                            b1.Property<string>("TextValue")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<short>("Type")
                                .HasColumnType("smallint");

                            b1.HasKey("EventId", "Index");

                            b1.ToTable("Field", "Epcis");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.OwnsMany("FasTnT.Domain.Model.Events.PersistentDisposition", "PersistentDispositions", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("int");

                            b1.Property<short>("Type")
                                .HasColumnType("smallint");

                            b1.Property<string>("Id")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("EventId", "Type", "Id");

                            b1.ToTable("PersistentDisposition", "Epcis");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.OwnsMany("FasTnT.Domain.Model.Events.SensorElement", "SensorElements", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("int");

                            b1.Property<int>("Index")
                                .HasColumnType("int");

                            b1.Property<string>("BizRules")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("DataProcessingMethod")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("DeviceId")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("DeviceMetadata")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTime?>("EndTime")
                                .HasColumnType("datetime2");

                            b1.Property<string>("RawData")
                                .HasMaxLength(2048)
                                .HasColumnType("nvarchar(2048)");

                            b1.Property<DateTime?>("StartTime")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("Time")
                                .HasColumnType("datetime2");

                            b1.HasKey("EventId", "Index");

                            b1.ToTable("SensorElement", "Epcis");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.OwnsMany("FasTnT.Domain.Model.Events.SensorReport", "Reports", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("int");

                            b1.Property<int>("Index")
                                .HasColumnType("int");

                            b1.Property<bool>("BooleanValue")
                                .HasColumnType("bit");

                            b1.Property<string>("ChemicalSubstance")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Component")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("CoordinateReferenceSystem")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("DataProcessingMethod")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("DeviceId")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("DeviceMetadata")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("HexBinaryValue")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<float?>("MaxValue")
                                .HasColumnType("real");

                            b1.Property<float?>("MeanValue")
                                .HasColumnType("real");

                            b1.Property<string>("Microorganism")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<float?>("MinValue")
                                .HasColumnType("real");

                            b1.Property<float?>("PercRank")
                                .HasColumnType("real");

                            b1.Property<float?>("PercValue")
                                .HasColumnType("real");

                            b1.Property<string>("RawData")
                                .HasMaxLength(2048)
                                .HasColumnType("nvarchar(2048)");

                            b1.Property<float?>("SDev")
                                .HasColumnType("real");

                            b1.Property<int>("SensorIndex")
                                .HasColumnType("int");

                            b1.Property<string>("StringValue")
                                .HasMaxLength(2048)
                                .HasColumnType("nvarchar(2048)");

                            b1.Property<DateTime?>("Time")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Type")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("UnitOfMeasure")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("UriValue")
                                .HasMaxLength(2048)
                                .HasColumnType("nvarchar(2048)");

                            b1.Property<float?>("Value")
                                .HasColumnType("real");

                            b1.HasKey("EventId", "Index");

                            b1.ToTable("SensorReport", "Epcis");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.OwnsMany("FasTnT.Domain.Model.Events.Source", "Sources", b1 =>
                        {
                            b1.Property<int>("EventId")
                                .HasColumnType("int");

                            b1.Property<string>("Type")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Id")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("EventId", "Type", "Id");

                            b1.ToTable("Source", "Epcis");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.Navigation("CorrectiveEventIds");

                    b.Navigation("Destinations");

                    b.Navigation("Epcs");

                    b.Navigation("Fields");

                    b.Navigation("PersistentDispositions");

                    b.Navigation("Reports");

                    b.Navigation("Request");

                    b.Navigation("SensorElements");

                    b.Navigation("Sources");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Masterdata.MasterData", b =>
                {
                    b.HasOne("FasTnT.Domain.Model.Request", "Request")
                        .WithMany("Masterdata")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("FasTnT.Domain.Model.Masterdata.MasterDataAttribute", "Attributes", b1 =>
                        {
                            b1.Property<int>("RequestId")
                                .HasColumnType("int");

                            b1.Property<int>("MasterDataIndex")
                                .HasColumnType("int");

                            b1.Property<int>("Index")
                                .HasMaxLength(256)
                                .HasColumnType("int");

                            b1.Property<string>("Id")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("RequestId", "MasterDataIndex", "Index");

                            b1.ToTable("MasterDataAttribute", "Cbv");

                            b1.WithOwner()
                                .HasForeignKey("RequestId", "MasterDataIndex");

                            b1.OwnsMany("FasTnT.Domain.Model.Masterdata.MasterDataField", "Fields", b2 =>
                                {
                                    b2.Property<int>("RequestId")
                                        .HasColumnType("int");

                                    b2.Property<int>("MasterDataIndex")
                                        .HasColumnType("int");

                                    b2.Property<int>("AttributeIndex")
                                        .HasMaxLength(256)
                                        .HasColumnType("int");

                                    b2.Property<int>("Index")
                                        .HasMaxLength(256)
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.Property<string>("Namespace")
                                        .IsRequired()
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.Property<int?>("ParentIndex")
                                        .HasMaxLength(256)
                                        .HasColumnType("int");

                                    b2.Property<string>("Value")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.HasKey("RequestId", "MasterDataIndex", "AttributeIndex", "Index");

                                    b2.ToTable("MasterDataField", "Cbv");

                                    b2.WithOwner()
                                        .HasForeignKey("RequestId", "MasterDataIndex", "AttributeIndex");
                                });

                            b1.Navigation("Fields");
                        });

                    b.Navigation("Attributes");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Masterdata.MasterDataChildren", b =>
                {
                    b.HasOne("FasTnT.Domain.Model.Masterdata.MasterData", "MasterData")
                        .WithMany("Children")
                        .HasForeignKey("MasterDataRequestId", "MasterDataIndex")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasterData");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Queries.StoredQuery", b =>
                {
                    b.OwnsMany("FasTnT.Domain.Model.Queries.QueryParameter", "Parameters", b1 =>
                        {
                            b1.Property<int>("QueryId")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Values")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("QueryId", "Name");

                            b1.ToTable("StoredQueryParameter", "Queries");

                            b1.WithOwner()
                                .HasForeignKey("QueryId");
                        });

                    b.Navigation("Parameters");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.StandardBusinessHeader", b =>
                {
                    b.HasOne("FasTnT.Domain.Model.Request", null)
                        .WithOne("StandardBusinessHeader")
                        .HasForeignKey("FasTnT.Domain.Model.StandardBusinessHeader", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("FasTnT.Domain.Model.Events.ContactInformation", "ContactInformations", b1 =>
                        {
                            b1.Property<int>("RequestId")
                                .HasColumnType("int");

                            b1.Property<short>("Type")
                                .HasMaxLength(256)
                                .HasColumnType("smallint");

                            b1.Property<string>("Identifier")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Contact")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("ContactTypeIdentifier")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("EmailAddress")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("FaxNumber")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("TelephoneNumber")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("RequestId", "Type", "Identifier");

                            b1.ToTable("ContactInformation", "Sbdh");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");
                        });

                    b.Navigation("ContactInformations");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Subscriptions.Subscription", b =>
                {
                    b.OwnsMany("FasTnT.Domain.Model.Queries.QueryParameter", "Parameters", b1 =>
                        {
                            b1.Property<int>("SubscriptionId")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Values")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SubscriptionId", "Name");

                            b1.ToTable("SubscriptionParameter", "Subscriptions");

                            b1.WithOwner()
                                .HasForeignKey("SubscriptionId");
                        });

                    b.OwnsOne("FasTnT.Domain.Model.Subscriptions.SubscriptionSchedule", "Schedule", b1 =>
                        {
                            b1.Property<int>("SubscriptionId")
                                .HasColumnType("int");

                            b1.Property<string>("DayOfMonth")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("DayOfWeek")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Hour")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Minute")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Month")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Second")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("SubscriptionId");

                            b1.ToTable("SubscriptionSchedule", "Subscriptions");

                            b1.WithOwner()
                                .HasForeignKey("SubscriptionId");
                        });

                    b.Navigation("Parameters");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Subscriptions.SubscriptionCallback", b =>
                {
                    b.HasOne("FasTnT.Domain.Model.Request", "Request")
                        .WithOne("SubscriptionCallback")
                        .HasForeignKey("FasTnT.Domain.Model.Subscriptions.SubscriptionCallback", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Masterdata.MasterData", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("FasTnT.Domain.Model.Request", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Masterdata");

                    b.Navigation("StandardBusinessHeader");

                    b.Navigation("SubscriptionCallback");
                });
#pragma warning restore 612, 618
        }
    }
}
